
function adjust_upper_mirror(step_size):
    take time average of initial power reading

    while moving top knob forwards improve time average:
        move top knod forwards

    if moving top knob forwards made reading worse:
        while moving top knob backwards improve time average:
            move top knod backwards

    repeat same procedure to adjust bottom knob

function adjust_bottom_mirror(step_size):
    //same steps as adjusting upper mirror

function walk_beam_top_knob(step_size, last_iteration):
    take note of the initial setup state
    take time average of initial reading

    if last_iteration == forward or NULL    //last time we walked we found that detuning the coarse mirror forward gave good result
        detune the coarse mirror forwards
        take intermediate reading
        while moving fine mirror forwards improve intermediate reading:
            move fine mirror forwards

        if the optimized intermediate reading is better than initial reading:
            last_iteration = forward
            return

        else         //otherwise...
            return fine mirror to original state
            while moving fine mirror BACKWARDS improve intermediate reading:
                move fine mirror backwards
            
            if the optimized intermediate reading is better than initial reading:
                last_iteration = forward
                return

            else 
                return setup to initial state

    if last_iteration == backward or NULL
        detune the coarse mirror backwards
        take intermediate reading
        while moving fine mirror backwards improve intermediate reading:
            move fine mirror backwards
        if the optimized intermediate reading is better than initial reading:
            last_iteration = backward
            return

        else         //otherwise...
            return fine mirror to original state
            while moving fine mirror BACKWARDS improve intermediate reading:
                move fine mirror backwards
            
            if the optimized intermediate reading is better than initial reading:
                last_iteration = backward
                return

            else 
                return setup to initial state
            
    //we couldn't improve any readings
    last_iteration = NULL
    return

function walk_beam_btm_knob(step_size):
    //same steps as top knob

function main():
    adjust_upper_mirror(step_size)
    adjust_bottom_mirror(step_size)

    for(i = 0...N): //repeat loop N times
        walk_beam_btm_knob(step_size)
        walk_beam_btm_knob(step_size)
